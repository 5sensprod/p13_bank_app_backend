swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
          schema:
            $ref: '#/definitions/ErrorResponse'
          
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/{userId}/accounts:
    get:
      security:
        - Bearer: []
      tags:
        - Account Module
      summary: Retrieve all accounts of a user
      parameters:
        - in: path
          name: userId
          required: true
          type: string
          description: User's ID
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Successfully retrieved accounts
          schema:
            $ref: '#/definitions/AccountResponse'
        '401':
          description: Unauthorized
        '500':
          description: Server error
    post:
      security:
        - Bearer: []
      tags:
        - Account Module
      summary: Create a new account for a user
      parameters:
        - in: path
          name: userId
          required: true
          type: string
          description: User's ID
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/NewAccount'
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        '201':
          description: Successfully created account
          schema:
            $ref: '#/definitions/NewAccountResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Internal Server Error
  /user/{userId}/accounts/{accountId}:
    get:
      security:
        - Bearer: []
      summary: Retrieve a specific account of a user
      tags:
        - Account Module
      parameters:
        - in: path
          name: userId
          required: true
          type: string
          description: ID of the user
        - in: path
          name: accountId
          required: true
          type: string
          description: ID of the account
      responses:
        '200':
          description: Successfully retrieved account
          schema:
            $ref: '#/definitions/Account'
        '404':
          description: Account not found
        '500':
          description: Server error
    delete:
      security:
        - Bearer: []
      summary: Delete an account
      tags:
        - Account Module
      parameters:
        - in: path
          name: userId
          required: true
          type: string
          description: ID of the user
        - in: path
          name: accountId
          required: true
          type: string
          description: ID of the account
      responses:
        '200':
          description: Successfully deleted account
        '404':
          description: Account not found
        '500':
          description: Server error
  /user/{userId}/bulk-accounts:
    post:
      security:
        - Bearer: []
      summary: Create multiple accounts for a user
      tags:
        - Account Module
      parameters:
        - in: path
          name: userId
          required: true
          type: string
          description: ID of the user
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/BulkAccount'
      responses:
        '201':
          description: Successfully created accounts
        '400':
          description: Bad Request
        '500':
          description: Server error
  /account/{accountId}/transactions:
    get:
      security:
        - Bearer: []
      summary: Retrieve transactions for a specific account
      tags:
        - Transaction
      parameters:
        - in: path
          name: accountId
          required: true
          type: string
          description: ID of the account
      responses:
        '200':
          description: Successfully retrieved transactions
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: Bad Request
        '500':
          description: Server error
    post:
      security:
        - Bearer: []
      summary: Create a new transaction for a specific account
      tags:
        - Transaction
      parameters:
        - in: path
          name: accountId
          required: true
          type: string
          description: ID of the account
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/NewTransaction'
      responses:
        '201':
          description: Successfully created transaction
        '400':
          description: Bad Request
        '500':
          description: Server error
  /account/{accountId}/transactions/{transactionId}:
    delete:
      security:
        - Bearer: []
      summary: Delete a specific transaction
      tags:
        - Transaction
      parameters:
        - in: path
          name: accountId
          required: true
          type: string
          description: ID of the account
        - in: path
          name: transactionId
          required: true
          type: string
          description: ID of the transaction to be deleted
      responses:
        '200':
          description: Transaction deleted successfully
        '404':
          description: Transaction not found
        '500':
          description: Server error
    put:
      security:
        - Bearer: []
      summary: Update a specific transaction
      tags:
        - Transaction
      parameters:
        - in: path
          name: accountId
          required: true
          type: string
          description: ID of the account
        - in: path
          name: transactionId
          required: true
          type: string
          description: ID of the transaction to be updated
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UpdateTransaction'
      responses:
        '200':
          description: Transaction successfully updated
          schema:
            $ref: '#/definitions/UpdateTransactionResponse'
        '400':
          description: Bad Request
        '404':
          description: Transaction not found
        '500':
          description: Server error
  /account/{accountId}/bulk-transactions:
    post:
      security:
        - Bearer: []
      summary: Create multiple transactions for a specific account
      tags:
        - Transaction
      parameters:
        - in: path
          name: accountId
          required: true
          type: string
          description: ID of the account
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TransactionBulk'
      responses:
        '201':
          description: Successfully added transactions in bulk
        '400':
          description: Bad Request
        '500':
          description: Server error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  NewAccount:
    type: object
    properties:
      title:
        type: string
      balance:
        type: number
      description:
        type: string
  NewAccountResponse:
    type: object
    properties:
      status:
        type: integer
        example: 201
      message:
        type: string
        example: "Successfully created account"
      body:
        type: object
        properties:
          transactions:
            type: array
            items:
              type: string
          _id:
            type: string
          user:
            type: string
          title:
            type: string
          balance:
            type: number
          description:
            type: string
          __v:
            type: integer
  ErrorResponse:
    type: object
    properties:
      status:
        type: integer
        example: 400
      message:
        type: string
        example: "ValidationError: title: Path `title` is required."
  Account:
    type: object
    required:
      - user
      - title
      - balance
      - description
    properties:
      transactions:
        type: array
        items:
          type: string
      _id:
        type: string
        description: The unique ID for the account.
      user:
        type: string
      title:
        type: string
      balance:
        type: number
      description:
        type: string
      __v:
        type: integer
        description: Version key for Mongoose (used for internal tracking).
  AccountResponse:
      type: object
      properties:
        status:
          type: integer
          example: 200
        message:
          type: string
          example: "Successfully retrieved accounts"
        body:
          type: array
          items:
            $ref: '#/definitions/Account'
  AccountBulk:
    type: object
    required:
      - title
      - balance
      - description
    properties:
      title:
        type: string
      balance:
        type: number
      description:
        type: string
  BulkAccount:
    type: object
    required:
      - accounts
    properties:
      accounts:
        type: array
        items:
          $ref: '#/definitions/AccountBulk'
  Transaction:
    type: object
    properties:
      _id:
        type: string
        description: The unique identifier for the transaction
      description:
        type: string
        description: A brief description of the transaction
      amount:
        type: number
        description: The transaction amount
      balance:
        type: number
        description: The balance after the transaction
      transactionType:
        type: string
        enum:
          - Electronic
          - Manual
        description: The type of transaction (e.g., Electronic, Manual)
      category:
        type: string
        description: The category of the transaction (e.g., Deposit, Withdrawal)
      notes:
        type: string
        description: Additional notes regarding the transaction
      account:
        type: string
        description: The account associated with this transaction
      date:
        type: string
        format: date-time
        description: The date and time of the transaction
      __v:
        type: integer
        description: Version key
  NewTransaction:
    type: object
    properties:
      description:
        type: string
      amount:
        type: number
      balance:
        type: number
      transactionType:
        type: string
        enum:
          - Electronic
          - Manual
          # Ajoutez d'autres types de transactions si nécessaire
      category:
        type: string
      notes:
        type: string
    required:
      - description
      - amount
      - balance
      - transactionType
      - category
      - notes
  UpdateTransaction:
    type: object
    properties:
      notes:
        type: string
        description: "La note associée à la transaction."
      category:
        type: string
        description: "La catégorie de la transaction."
    required:
      - category
      - notes
  UpdateTransactionResponse:
    type: object
    properties:
      status:
        type: integer
        description: "Le code de statut de la réponse."
      message:
        type: string
        description: "Un message décrivant le résultat de la mise à jour."
      body:
        type: object
        properties:
          _id:
            type: string
            format: uuid
            description: "L'identifiant unique de la transaction."
          description:
            type: string
            description: "Une description de la transaction."
          amount:
            type: number
            description: "Le montant de la transaction."
          balance:
            type: number
            description: "Le solde après la transaction."
          transactionType:
            type: string
            enum:
              - Electronic
              # Add other transaction types if any
            description: "Le type de la transaction."
          category:
            type: string
            description: "La catégorie de la transaction."
          notes:
            type: string
            description: "Des notes supplémentaires concernant la transaction."
          account:
            type: string
            format: uuid
            description: "L'identifiant unique du compte associé à la transaction."
          date:
            type: string
            format: date-time
            description: "La date et l'heure de la transaction."
          __v:
            type: integer
            description: "La version du document."
    required:
      - status
      - message
      - body
  TransactionBulk:
    type: object
    properties:
      transactions:
        type: array
        items:
          type: object
          properties:
            description:
              type: string
              description: "Une description de la transaction."
            amount:
              type: number
              description: "Le montant de la transaction."
            balance:
              type: number
              description: "Le solde après la transaction."
            transactionType:
              type: string
              enum:
                - Electronic
                - Manual
              description: "Le type de la transaction."
            category:
              type: string
              description: "La catégorie de la transaction."
            notes:
              type: string
              description: "Des notes supplémentaires concernant la transaction."
        description: "Liste des transactions."
    required:
      - transactions
